{"ast":null,"code":"import { ofType, createEffect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, exhaustMap, map } from 'rxjs/operators';\nimport { addRestaurant, errorHttpRestaurant, loadRestaurant, getRestaurantEffect, viewRestaurant, updateRestaurantEffect, editRestaurant, deleteRestaurant, deleteRestaurantEffect } from '../store/actions/restaurantActions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../servicios/restaurants.service\";\nexport let RestaurantEffects = /*#__PURE__*/(() => {\n  class RestaurantEffects {\n    constructor(actions$, restaurantService) {\n      this.actions$ = actions$;\n      this.restaurantService = restaurantService;\n      this.addRestaurant$ = createEffect(() => this.actions$.pipe(ofType(loadRestaurant), exhaustMap(action => this.restaurantService.saveRestaurant(action.restaurant).pipe(map(res => res._id), concatMap(id => this.restaurantService.uploadPicture(action.image, id).pipe(map(res => addRestaurant({\n        restaurant: res\n      })))), catchError(error => of(errorHttpRestaurant()))))));\n      this.getRestaurant$ = createEffect(() => this.actions$.pipe(ofType(getRestaurantEffect), exhaustMap(action => this.restaurantService.getRestaurant().pipe(map(restaurant => viewRestaurant({\n        restaurant\n      }))))));\n      this.updateRestaurant$ = createEffect(() => this.actions$.pipe(ofType(updateRestaurantEffect), exhaustMap(action => this.restaurantService.updateRestaurant(action.restaurant, action.id).pipe(map(res => editRestaurant({\n        restaurant: res\n      }))))));\n      this.deleteRestaurant$ = createEffect(() => this.actions$.pipe(ofType(deleteRestaurantEffect), exhaustMap(action => this.restaurantService.deleteRestaurant(action.id).pipe(map(_ => deleteRestaurant())))));\n    }\n\n  }\n\n  RestaurantEffects.ɵfac = function RestaurantEffects_Factory(t) {\n    return new (t || RestaurantEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.RestaurantService));\n  };\n\n  RestaurantEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RestaurantEffects,\n    factory: RestaurantEffects.ɵfac\n  });\n  return RestaurantEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}