{"ast":null,"code":"import { interval } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport Swal from 'sweetalert2';\nimport { NewOrderComponent } from '../new-order/new-order.component';\nimport { loadOrderEffect } from 'src/app/store/actions/orderActions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/servicios/cajeros.service\";\nimport * as i3 from \"../parent-products/Utilties\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"src/app/servicios/orderSocket.service\";\nimport * as i6 from \"@ngrx/store\";\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(router, cajeroService, utilities, dialog, orderSocketService, store) {\n      this.router = router;\n      this.cajeroService = cajeroService;\n      this.utilities = utilities;\n      this.dialog = dialog;\n      this.orderSocketService = orderSocketService;\n      this.store = store;\n      this.sourceABC = interval(7200);\n    }\n\n    ngOnInit() {\n      // testing\n\n      /*   const dialogRef = this.dialog.open(NewOrderComponent, {\n          width: `${screen.width}px`,\n          height:`${screen.height}px`,\n          minWidth:`${screen.width}px`,\n        }); */\n      //ocultar icono y estado de reciviendo pedidos\n      this.utilities.setCambioRuta(true);\n      this.subscription = this.sourceABC.subscribe();\n      this._orderSubscriptor = this.orderSocketService.getOrder.pipe().subscribe(data => {\n        this.store.dispatch(loadOrderEffect({\n          order: JSON.parse(data)\n        }));\n        const dialogRef = this.dialog.open(NewOrderComponent, {\n          width: `${screen.width}px`,\n          height: `${screen.height}px`,\n          minWidth: `${screen.width}px`\n        });\n      });\n    }\n\n    ngOnDestroy() {\n      //Called once, before the instance is destroyed.\n      //Add 'implements OnDestroy' to the class.\n      this._orderSubscriptor.unsubscribe();\n    }\n\n    openDialog() {\n      const dialogRef = this.dialog.open(NewOrderComponent, {\n        width: `${screen.width}px`,\n        height: `${screen.height}px`,\n        minWidth: `${screen.width}px`,\n        data: {\n          name: \"cristian\"\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n      });\n    }\n\n    validateToken() {\n      const token = localStorage.getItem('token');\n      const helper = new JwtHelperService();\n      const isExpired = helper.isTokenExpired(token);\n\n      if (isExpired) {\n        Swal.fire('estimado usuario el token ha expirado por seguridad');\n        this.cajeroService.logout();\n        this.router.navigate([\"/login\"]);\n      }\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CajerosService), i0.ɵɵdirectiveInject(i3.Utilities), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.OrderSocketService), i0.ɵɵdirectiveInject(i6.Store));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 2,\n    vars: 0,\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-main-nav\");\n        i0.ɵɵelement(1, \"router-outlet\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"mat-slider[_ngcontent-%COMP%]{width:300px}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}