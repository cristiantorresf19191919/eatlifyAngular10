{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-socket-io\";\nexport let DocumentService = /*#__PURE__*/(() => {\n  class DocumentService {\n    constructor(socket) {\n      this.socket = socket;\n      /* socket.on('getDoc') socket.emit('document',doc) */\n\n      /* preparando para escuchar el evento document del servidor*/\n\n      this.currentDocument = this.socket.fromEvent('document');\n      this.documents = this.socket.fromEvent('documents');\n    }\n\n    getDocument(id) {\n      this.socket.emit('getDoc', id);\n    }\n\n    newDocument() {\n      this.socket.emit('addDoc', {\n        id: this.docId(),\n        doc: ''\n      });\n    }\n\n    editDocument(document) {\n      this.socket.emit('editDoc', document);\n    }\n    /* funcion generadora de ids*/\n\n\n    docId() {\n      let text = '';\n      const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n      for (let i = 0; i < 5; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n      }\n\n      return text;\n    }\n\n  }\n\n  DocumentService.ɵfac = function DocumentService_Factory(t) {\n    return new (t || DocumentService)(i0.ɵɵinject(i1.Socket));\n  };\n\n  DocumentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DocumentService,\n    factory: DocumentService.ɵfac,\n    providedIn: 'root'\n  });\n  return DocumentService;\n})();","map":null,"metadata":{},"sourceType":"module"}